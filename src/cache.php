<?php
/**
 * @method static ping()
 * @method static echo()
 * @method static get(string $key)
 * @method static bool set(string $key, $value)
 * @method static bool setex(string $key, int $ttl, $value)
 * @method static psetex()
 * @method static bool setnx(string $key, $value)
 * @method static getSet()
 * @method static randomKey()
 * @method static renameKey()
 * @method static renameNx()
 * @method static array getMultiple(array $keys)
 * @method static int exists(...$key)
 * @method static int delete(...$key)
 * @method static int incr(string $key)
 * @method static int incrBy(string $key, int $offset)
 * @method static incrByFloat()
 * @method static int decr(string $key)
 * @method static int decrBy(string $key, int $offset)
 * @method static type()
 * @method static int append(string $key, string $value)
 * @method static string getRange(string $key, int $start, int $end)
 * @method static int setRange(string $key, int $offset, string $new_string)
 * @method static getBit()
 * @method static setBit()
 * @method static int strlen(string $key)
 * @method static getKeys()
 * @method static sortAsc()
 * @method static sortAscAlpha()
 * @method static sortDesc()
 * @method static sortDescAlpha()
 * @method static lPush(string $key, string $value)
 * @method static rPush(string $key, string $value)
 * @method static lPushx(string $key, string $value)
 * @method static rPushx(string $key, string $value)
 * @method static lPop(string $key)
 * @method static rPop(string $key)
 * @method static array blPop(array $keys, int $timeout)
 * @method static array brPop(array $keys, int $timeout)
 * @method static lSize()
 * @method static lRemove()
 * @method static listTrim()
 * @method static lGet()
 * @method static lGetRange()
 * @method static lSet()
 * @method static lInsert()
 * @method static int sAdd(string $set_key, string ...$member_key)
 * @method static sSize()
 * @method static int sRemove(string $set_key, string ...$member_key)
 * @method static sMove()
 * @method static sPop()
 * @method static sRandMember()
 * @method static sContains()
 * @method static array sMembers(string $set_key)
 * @method static sInter()
 * @method static sInterStore()
 * @method static sUnion()
 * @method static sUnionStore()
 * @method static sDiff()
 * @method static sDiffStore()
 * @method static bool setTimeout(string $key, int $ttl)
 * @method static dbSize()
 * @method static auth()
 * @method static ttl()
 * @method static pttl()
 * @method static bool persist()
 * @method static info()
 * @method static resetStat()
 * @method static move()
 * @method static bgrewriteaof()
 * @method static slaveof()
 * @method static bitop()
 * @method static bitcount()
 * @method static bitpos()
 * @method static bool mset(string $key, $value)
 * @method static msetnx()
 * @method static rpoplpush()
 * @method static brpoplpush()
 * @method static int zAdd(string $key, float $score, $value)
 * @method static zDelete()
 * @method static zRange()
 * @method static zReverseRange()
 * @method static zRangeByScore()
 * @method static zRevRangeByScore()
 * @method static int zCount(string $key, float $start, float $end)
 * @method static zDeleteRangeByScore()
 * @method static zDeleteRangeByRank()
 * @method static int zCard(string $key)
 * @method static zScore()
 * @method static zRank()
 * @method static zRevRank()
 * @method static zInter()
 * @method static zUnion()
 * @method static zIncrBy()
 * @method static bool expireAt(string $key, int $timestamp)
 * @method static pexpire()
 * @method static pexpireAt()
 * @method static hGet(string $key, string $hashKey)
 * @method static int hSet(string $key, string $hashKey, string $value)
 * @method static bool hSetNx(string $key, string $hashKey, string $value)
 * @method static hDel(string $key, string ...$hashKey)
 * @method static hLen()
 * @method static hKeys()
 * @method static array hVals(string $key)
 * @method static array hGetAll(string $key)
 * @method static bool hExists(string $key, string $member_key)
 * @method static int hIncrBy(string $key, string $member, int $value)
 * @method static float hIncrByFloat(string $key, string $member, float $value)
 * @method static bool hMset(string $key, array $members)
 * @method static array hMget(string $key, array $member_keys)
 * @method static multi()
 * @method static discard()
 * @method static exec()
 * @method static pipeline()
 * @method static watch()
 * @method static unwatch()
 * @method static int publish(string $key, string $message)
 * @method static subscribe(array $channel_keys)
 * @method static psubscribe()
 * @method static unsubscribe()
 * @method static punsubscribe()
 * @method static time()
 * @method static eval()
 * @method static evalsha()
 * @method static script()
 * @method static dump()
 * @method static restore()
 * @method static _prefix()
 * @method static _serialize()
 * @method static _unserialize()
 * @method static client()
 * @method static getOption()
 * @method static setOption()
 * @method static config()
 * @method static slowlog()
 * @method static getHost()
 * @method static getPort()
 * @method static getDBNum()
 * @method static getTimeout()
 * @method static getReadTimeout()
 * @method static getPersistentID()
 * @method static getAuth()
 * @method static isConnected()
 * @method static wait()
 * @method static pubsub()
 * @method static lLen(string $key)
 * @method static array sGetMembers(string $set_key)
 * @method static array mGet(array $keys)
 * @method static int expire(string $key, int $ttl)
 * @method static zunionstore()
 * @method static zinterstore()
 * @method static zRemove()
 * @method static zRem()
 * @method static zRemoveRangeByScore()
 * @method static zRemRangeByScore()
 * @method static zRemRangeByRank()
 * @method static int zSize(string $key)
 * @method static substr()
 * @method static rename()
 * @method static int del(string ...$key)
 * @method static array keys(string $pattern)
 * @method static lrem()
 * @method static ltrim()
 * @method static lindex()
 * @method static lrange()
 * @method static scard()
 * @method static int sRem(string $set_key, string ...$member_key)
 * @method static sismember()
 * @method static zrevrange()
 * @method static sendEcho()
 * @method static evaluate()
 * @method static evaluateSha()
 */
class cache {
    /**
     * 更改在本协程内的db index，默认是1，0是session，2是响应缓存
     */
    public static function select(int $index): void {
        \SysContext::set('cache_dbindex', $index);
    }
    public static function __callStatic(string $name, array $arguments) {
        $redis = \Swango\Cache\RedisPool::pop();
        $cache_dbindex = \SysContext::get('cache_dbindex') ?? 1;
        if (! isset($redis->_db_index) || $redis->_db_index !== $cache_dbindex) {
            $redis->select($cache_dbindex);
            $redis->_db_index = $cache_dbindex;
        }
        $ret = $redis->{$name}(...$arguments);
        if ($redis->errCode !== 0) {
            throw new \Swango\Cache\RedisErrorException("Redis error: [$redis->errCode] $redis->errMsg",
                $redis->errCode);
        }
        \Swango\Cache\RedisPool::push($redis);
        return $ret;
    }
}
